# requirements.txt
Flask==2.3.3
Flask-SQLAlchemy==3.1.1
Werkzeug==2.3.7

# 무료 배포 및 설치 안내 

## 설치 방법

### 1. 로컬에서 실행하는 방법

1. **프로젝트 디렉토리 생성 및 이동**
   ```
   mkdir space-reservation
   cd space-reservation
   ```

2. **필요한 파일 생성**
   - `app.py` 파일을 생성하고 첫 번째 코드 블록의 내용을 붙여넣습니다.
   - `templates` 폴더를 생성합니다:
     ```
     mkdir templates
     ```
   - `templates` 폴더 안에 두 번째 코드 블록의 HTML 템플릿 파일들을 저장합니다.

3. **필요한 패키지 설치**
   ```
   pip install Flask Flask-SQLAlchemy
   ```
   또는
   ```
   pip install -r requirements.txt
   ```

4. **애플리케이션 실행**
   ```
   python app.py
   ```

5. **웹 브라우저에서 확인**
   - 웹 브라우저를 열고 `http://localhost:5000`으로 접속합니다.

## 무료 호스팅 방법

### 1. PythonAnywhere 배포 방법

PythonAnywhere는 Python 웹 애플리케이션을 무료로 호스팅할 수 있는 서비스입니다.

1. [PythonAnywhere](https://www.pythonanywhere.com)에서 무료 계정을 만듭니다.
2. 'Web' 탭에서 '+ Add a new web app'을 클릭합니다.
3. 'Flask'를 선택하고 Python 버전을 선택합니다.
4. 'Bash' 콘솔을 열고 다음 명령어로 코드를 업로드합니다:
   - 직접 파일을 만들거나 GitHub 저장소를 사용할 수 있습니다.
   ```
   mkdir myapp
   cd myapp
   # 필요한 파일들을 업로드하거나 편집기를 사용해 생성
   pip install -r requirements.txt
   ```
5. 'Web' 탭에서 'Code' 섹션의 'Source code'와 'Working directory'를 위에서 만든 디렉토리로 변경합니다.
6. 'WSGI configuration file'을 클릭하고 다음과 같이 수정합니다:
   ```python
   import sys
   path = '/home/[사용자이름]/myapp'
   if path not in sys.path:
       sys.path.append(path)
   
   from app import app as application
   from app import initialize_app
   initialize_app()
   ```
7. 'Web' 탭에서 'Reload'를 클릭하여 애플리케이션을 시작합니다.

### 2. Render 배포 방법

Render는 무료 티어를 제공하는 현대적인 클라우드 플랫폼입니다.

1. [Render](https://render.com)에서 계정을 만듭니다.
2. 'New +'를 클릭하고 'Web Service'를 선택합니다.
3. GitHub 저장소를 연결하거나 코드를 업로드합니다.
4. 서비스 이름을 설정하고 런타임을 'Python 3'으로 설정합니다.
5. 빌드 명령어를 설정합니다: `pip install -r requirements.txt`
6. 시작 명령어를 설정합니다: `gunicorn app:app`
7. 저장소에 다음 파일을 추가합니다:
   ```
   # 파일: requirements.txt
   Flask==2.3.3
   Flask-SQLAlchemy==3.1.1
   gunicorn==21.2.0
   ```
8. 'Create Web Service'를 클릭하여 배포합니다.

## 주의사항

- 무료 호스팅은 일정 시간 후 비활성화될 수 있으므로 정기적으로 접속하여 활성 상태를 유지해야 합니다.
- 무료 호스팅은 리소스 제한이 있으므로 대규모 트래픽에는 적합하지 않습니다.
- 데이터베이스 백업을 정기적으로 수행하는 것이 좋습니다.
